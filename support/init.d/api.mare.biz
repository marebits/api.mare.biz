#!/bin/sh
#
# api.mare.biz - this script starts and stops the api.mare.biz daemon
#
# chkconfig:   - 85 15
# description:  api.mare.biz provides API support for Mare Bits
# processname: api.mare.biz
# pidfile:     /var/www/html/api.mare.biz/pid/api.mare.biz.pid
# user:        mare-api


APP_NAME="api.mare.biz";
USER="mare-api";
GROUP="mare-api";
NODE_ENV="production";
APP_DIR="/var/www/html/api.mare.biz";
NPM_CMD="start";
KWARGS="";
CONFIG_DIR="";
LOG_DIR="${APP_DIR}/logs";
LOG_FILE="${LOG_DIR}/${APP_NAME}.log";
NPM_EXEC="/usr/local/bin/npm";

USAGE="Usage: ${0} {start|stop|restart|status} [--force]";
FORCE_OP=false;

get_pids() { echo "$(pgrep -d "," -U ${USER})"; }

is_running() { [ ! -z "$(get_pids)" ]; }

start_it() {
	echo "Starting ${APP_NAME}...";
	echo "cd ${APP_DIR} && PATH=${PATH}\:/usr/local/bin NODE_ENV=${NODE_ENV} NODE_CONFIG_DIR=${CONFIG_DIR} ${NPM_EXEC} ${NPM_CMD} ${KWARGS} 1>${LOG_FILE} 2>&1 &" | sudo -i -u ${USER};
	echo "${APP_NAME} started";
}

stop_process() {
	PIDS=$(get_pids);
	echo "Killing processes ${PIDS}";
	pkill -P ${PIDS};
}

start_app() {
	if is_running; then
		echo "${APP_NAME} already running with pids $(get_pids)";
		exit 1;
	else
		start_it;
	fi;
}

stop_app() {
	if is_running; then
		echo "Stopping ${APP_NAME}...";
		stop_process;
		echo "${APP_NAME} stopped";
	else
		echo "${APP_NAME} already stopped";
		exit 1;
	fi;
}

status_app() {
	if is_running; then
		echo "${APP_NAME} running with pids $(get_pids)";
	else
		echo "${APP_NAME} stopped";
	fi;
}

case "${2}" in
	--force)
		FORCE_OP=true;
	;;

	"")
	;;

	*)
		echo $USAGE;
		exit 1;
	;;
esac

case "${1}" in
	start)
		start_app;
	;;

	stop)
		stop_app;
	;;

	restart)
		stop_app;
		start_app;
	;;

	status)
		status_app;
	;;

	*)
		echo $USAGE;
		exit 1;
	;;
esac
